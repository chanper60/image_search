# docker-compose.yml
version: '3.8'

services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: vector_db
    ports:
      - "6333:6333" # REST API
      - "6334:6334" # gRPC
    volumes:
      - qdrant_storage:/qdrant/storage # Use named volume
    networks:
      - app_network

  mongo_metadata:
    image: mongo:latest
    container_name: mongo_metadata_db
    ports:
      - "27017:27017"
    volumes:
      - mongo_metadata_data:/data/db # Use named volume
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    networks:
      - app_network

  mongo_logging:
    image: mongo:latest
    container_name: mongo_logging_db
    ports:
      - "27018:27017" # Map to different host port
    volumes:
      - mongo_logging_data:/data/db # Use named volume
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    networks:
      - app_network

  triton:
    image: nvcr.io/nvidia/tritonserver:25.03-py3 # Use a version compatible with your TensorRT build
    container_name: triton_server
    ports:
      - "8000:8000" # HTTP
      - "8001:8001" # gRPC
      - "8002:8002" # Metrics
    volumes:
      - ./model_repository:/models # Mount your model repository
    command: tritonserver --model-repository=/models --log-verbose=1 # --strict-model-config=false
    deploy: # Requires NVIDIA Container Toolkit setup on the Docker host
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1 # Request 1 GPU
              capabilities: [gpu]
    networks:
      - app_network

  # --- NEW: Gradio App Service ---
  gradio_app:
    build: ./app # Path to the directory containing the app's Dockerfile
    container_name: gradio_ui_service
    ports:
      - "7860:7860" # Expose Gradio port
    depends_on: # Ensure backend services start first
      - qdrant
      - mongo_metadata
      - mongo_logging
      - triton
    environment:
      # Pass connection details as environment variables
      # Service names below are used for inter-container communication
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - MONGO_META_URI=mongodb://admin:password@mongo_metadata:27017/
      - MONGO_LOG_URI=mongodb://admin:password@mongo_logging:27017/
      - TRITON_HTTP_URL=http://triton:8000
      # Other config if needed
      - GRADIO_SERVER_NAME=0.0.0.0 # Make Gradio accessible outside container
      - PYTHONUNBUFFERED=1 # Ensures print statements appear directly in docker logs
    volumes:
       # Mount sample_data if needed for dynamic updates or large datasets,
       # otherwise it's copied in the Dockerfile. Included here for gallery path access.
       - ./sample_data:/app/sample_data
    networks:
      - app_network

networks:
  app_network: # Define a shared network
    driver: bridge

volumes: # Define named volumes for persistent storage
  qdrant_storage:
  mongo_metadata_data:
  mongo_logging_data:
